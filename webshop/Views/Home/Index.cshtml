@model IEnumerable<webshop.Models.Product>

<h1>Каталог</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-secondary">@TempData["ErrorMessage"]</div>
}



<div class="row">
    <div class="col-md-3">
        <form method="get" asp-controller="Home" asp-action="Index" class="sticky-top bg-light p-3">
            <h5>Фильтры</h5>
            <div class="name__search__container mb-3">
                <input type="text" name="name" class="form-control" placeholder="Найти товар" value="@ViewBag.SelectedName" list="nameList" onchange="this.form.submit()" autocomplete="off" />
                <datalist id="nameList">
                    @foreach (var name in ViewBag.Names)
                    {
                        <option value="@name"></option>
                    }
                </datalist>
            </div>

            <input type="text" name="category" class="form-control mb-3" placeholder="Категория" value="@ViewBag.SelectedCategory" list="categoryList" autocomplete="off" />
            <datalist id="categoryList">
                @foreach (var cat in ViewBag.Categories)
                {
                    <option value="@cat"></option>
                }
            </datalist>

            <input type="number" name="minPrice" class="form-control mb-3" placeholder="Мин. цена" value="@ViewBag.MinPrice" autocomplete="off" />
            <input type="number" name="maxPrice" class="form-control mb-3" placeholder="Макс. цена" value="@ViewBag.MaxPrice" autocomplete="off" />
            <button type="submit" class="btn btn-primary">Фильтр</button>
        </form>
    </div>  

    <div class="col-md-9">
        <div id="product-list" class="products" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); gap: 20px; margin-top: 20px;"></div>

        <div id="loading" style="display: none; text-align: center; margin: 20px;">
            <p>Загрузка...</p>
        </div>
    </div>
</div>



<script>
    let skip = $('.product-card').length;
    const take = 15;
    let isLoading = false;
    let hasMore = true;

    function getFilters() {
        return {
            category: $('input[name="category"]').val(),
            name: $('input[name="name"]').val(),
            minPrice: $('input[name="minPrice"]').val(),
            maxPrice: $('input[name="maxPrice"]').val()
        };
    }

    function loadProducts() {
        if (isLoading || !hasMore) return;

        isLoading = true;
        const filters = getFilters();

        $.get('/Home/LoadProducts', { ...getFilters(), skip, take }, function (response) {
            if (response.products && response.products.length > 0) {
                response.products.forEach((product, index) => {
                    let productCard = $(
                        `<div class="card" id="card">
                             <div class="content">
                                 <img src="/images/Products/${product.image}" alt="${product.name}" style="max-width: 100%;" />
                                 <h3>${product.name}</h3>
                                 <p>${product.description}</p>
                                 <p>${product.price} р.</p>
                             </div>
                         </div>`
                    );

                    if (response.isAuthenticated) {
                        let detailsForm = $(
                            `<form action="/Home/Details" method="get">
                                 <input type="hidden" name="id" value="${product.id}" />
                                 <button type="submit" class="btn btn-link btn-sm">Просмотреть товар</button>
                             </form>`
                        );

                        let addToCartForm = $(
                            `<form class="add-to-cart-form" method="post">
                                <input type="hidden" name="productId" value="${product.id}" />
                                <button type="submit" class="btn btn-primary">Добавить в корзину</button>
                            </form>`
                        );

                        productCard.find('.content').append(detailsForm); 
                        productCard.find('.content').append(addToCartForm);

                    }



                    $('#product-list').append(productCard);

                    setTimeout(() => productCard.addClass('show'), index * 100);
                });

                skip += take;
                hasMore = response.hasMore;
            } else {
                hasMore = false;
            }

            isLoading = false;
        });

    }

    $(window).scroll(function () {
        if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
            loadProducts();
        }
    });

</script>
